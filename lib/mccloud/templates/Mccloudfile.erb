Mccloud::Config.run do |config|
  # All Mccloud configuration is done here. For a detailed explanation
  # and listing of configuration options, please view the documentation
  # online.

  config.mccloud.prefix="<%= mcPrefix %>"
  config.mccloud.environment="<%= mcEnvironment %>"
  config.mccloud.identity="<%= mcIdentity %>"

  config.vm.define "<%= serverName %>" do |<%= serverName %>_config|
    <%= serverName %>_config.vm.provider="<%= providerId %>"

    #<%= serverName %>_config.vm.provisioner=:chef_solo
    #<%= serverName %>_config.vm.provisioner=:puppet
    <%= serverName %>_config.vm.provider_options={ 
      # ID = "<%= imageId%>" = <%= imageDescription %>
      :image_id => "<%= imageId %>" , 
      :flavor_id => "<%= flavorId %>",
      :groups => %w(<%= securityGroup %>),
      :key_name => "<%= keyName %>",
      :availability_zone => "<%= availabilityZone %>" 
    }
	#Forward 80 remote to localport 8080
    <%= serverName %>_config.vm.forward_port("http", 8080, 80)
    <%= serverName %>_config.vm.user="<%= userName %>"
    <%= serverName %>_config.vm.bootstrap="<%= bootstrapScript %>"
    <%= serverName %>_config.vm.private_key="<%= privateKeyPath %>"
    <%= serverName %>_config.vm.public_key="<%= publicKeyPath %>"

    ### Provisioners
    <%= serverName %>_config.vm.provision :puppet do |puppet|
      puppet.pp_path = "/tmp/vagrant-puppet"
      #puppet.manifests_path = "puppet/manifests"
      #puppet.module_path = "puppet/modules"
      puppet.manifest_file = "newbox.pp"
    end

    <%= serverName %>_config.vm.provision :chef_solo do |chef|
      chef.cookbooks_path = ["<your cookboopath>"]
      chef.add_recipe("<some recipe>")
      # You may also specify custom JSON attributes:
      chef.json.merge!({})
    end
  end
end
